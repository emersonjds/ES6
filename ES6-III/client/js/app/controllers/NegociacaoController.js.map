{"version":3,"sources":["../../app-es6/controllers/NegociacaoController.js"],"names":["NegociacaoController","$","document","querySelector","bind","_inputData","_inputQuantidade","_inputValor","_listaNegociacoes","_mensagem","_ordemAtual","_service","_init","lista","then","negociacoes","forEach","adiciona","negociacao","catch","texto","erro","setInterval","importaNegociacoes","event","preventDefault","_criaNegociacao","cadastra","mensagem","_limpaFormulario","importa","apaga","esvazia","textoParaData","value","parseInt","parseFloat","focus","coluna","inverteOrdem","ordena","p","s"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["import {ListaNegociacoes} from './models/ListaNegociacoes'\nimport {Mensagem} from '../models/Mensagem'\nimport {NegociacoesView} from '../views/NegociacoesView'\nimport {MensagemView} from '../views/MensagemView'\nimport {NegociacaoService} from '../services/NegociacaoService'\nimport {DateHelper} from '../helpers/DateHelper'\nimport {Bind} from '../helpers/Bind'\nimport {Negociacao} from '../models/Negociacao'\n\nclass NegociacaoController {\n\n    constructor() {\n\n        let $ = document.querySelector.bind(document)\n\n        this._inputData = $('#data')\n        this._inputQuantidade = $('#quantidade')\n        this._inputValor = $('#valor')\n\n        this._listaNegociacoes = new Bind(\n            new ListaNegociacoes(),\n            new NegociacoesView($('#negociacoesView')),\n            'adiciona', 'esvazia', 'ordena', 'inverteOrdem')\n\n        this._mensagem = new Bind(\n            new Mensagem(), new MensagemView($('#mensagemView')),\n            'texto')\n\n        this._ordemAtual = ''\n        this._service = new NegociacaoService()\n\n        this._init()\n    }\n\n    _init() {\n        this._service\n            .lista()\n            .then(negociacoes =>\n                negociacoes.forEach(negociacao =>\n                    negociacoes._listaNegociacoes.adiciona(negociacao)))\n            .catch(erro => this._mensagem.texto = erro)\n\n        setInterval(() => {\n            this.importaNegociacoes()\n        }, 3000)\n    }\n\n    adiciona(event) {\n        event.preventDefault()\n\n        let negociacao = this._criaNegociacao()\n\n        this._service\n            .cadastra(negociacao)\n            .then(mensagem => {\n                this._listaNegociacoes.adiciona(negociacao)\n                this._mensagem.texto = mensagem\n                this._limpaFormulario()\n            })\n            .catch(erro => this._mensagem.texto = erro)\n    }\n\n    importaNegociacoes() {\n        this._service\n            .importa(this._listaNegociacoes.negociacoes)\n            .then(negociacoes => negociacoes.forEach(negociacao => {\n                this._listaNegociacoes.adiciona(negociacao)\n                this._mensagem.texto = 'Negocições do período importadas'\n            }))\n            .catch(erro => this._mensagem.texto = erro)\n    }\n\n    apaga() {\n\n        this._service\n            .apaga()\n            .then(mensagem => {\n                this._mensagem.texto = mensagem\n                this._listaNegociacoes.esvazia()\n            })\n            .catch(erro => this._mensagem.texto = erro)\n    }\n\n    _criaNegociacao() {\n\n        return new Negociacao(\n            DateHelper.textoParaData(this._inputData.value),\n            parseInt(this._inputQuantidade.value),\n            parseFloat(this._inputValor.value))\n    }\n\n    _limpaFormulario() {\n\n        this._inputData.value = ''\n        this._inputQuantidade.value = 1\n        this._inputValor.value = 0.0\n        this._inputData.focus()\n    }\n\n    ordena(coluna) {\n\n        if (this._ordemAtual == coluna) {\n            this._listaNegociacoes.inverteOrdem()\n        } else {\n            this._listaNegociacoes.ordena((p, s) => p[coluna] - s[coluna])\n        }\n        this._ordemAtual = coluna\n    }\n}\n\n"]}