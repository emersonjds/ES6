{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","onerror","console","log","e","target","error","cursor","openCursor","negociacoes","atual","result","dado","value","push","Negociacao","_data","_quantidade","_valor","continue","consoele","clear"],"mappings":";;;;;;IAAMA,a;AAEJ,yBAAYC,UAAZ,EAAwB;AAAA;;AAEtB,SAAKC,WAAL,GAAmBD,UAAnB;AACA,SAAKE,MAAL,GAAc,aAAd;AACD;;;;6BAEQC,U,EAAY;AAAA;;AAEnB,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEtC,YAAIC,UAAU,MACXN,WADW,CAEXO,WAFW,CAEC,CAAC,MAAKN,MAAN,CAFD,EAEgB,WAFhB,EAGXO,WAHW,CAGC,MAAKP,MAHN,EAIXQ,GAJW,CAIPP,UAJO,CAAd;;AAMAI,gBAAQI,SAAR,GAAoB,aAAK;AACvBN;AACD,SAFD;;AAIAE,gBAAQK,OAAR,GAAkB,aAAK;;AAErBC,kBAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,iBAAO,yCAAP;AACD,SAJD;AAMD,OAlBM,CAAP;AAmBD;;;iCAEY;AAAA;;AAEX,aAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEtC,YAAIY,SAAS,OAAKjB,WAAL,CACVO,WADU,CACE,CAAC,OAAKN,MAAN,CADF,EACiB,WADjB,EAEVO,WAFU,CAEE,OAAKP,MAFP,EAGViB,UAHU,EAAb;;AAKA,YAAIC,cAAc,EAAlB;;AAEAF,eAAOP,SAAP,GAAmB,aAAK;AACtB,cAAIU,QAAQN,EAAEC,MAAF,CAASM,MAArB;;AAEA,cAAID,KAAJ,EAAW;AACT,gBAAIE,OAAOF,MAAMG,KAAjB;;AAEAJ,wBAAYK,IAAZ,CAAiB,IAAIC,UAAJ,CAAeH,KAAKI,KAApB,EAA2BJ,KAAKK,WAAhC,EAA6CL,KAAKM,MAAlD,CAAjB;;AAEAR,kBAAMS,QAAN;AACD,WAND,MAMO;AACLzB,oBAAQe,WAAR;AACD;AACF,SAZD;;AAcAF,eAAON,OAAP,GAAiB,aAAK;AACpBmB,mBAASjB,GAAT,CAAaC,EAAEC,MAAF,CAASC,KAAtB;AACAX,iBAAO,yCAAP;AACD,SAHD;AAID,OA3BM,CAAP;AA4BD;;;iCAEY;AAAA;;AACX,aAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,YAAIC,UAAU,OAAKN,WAAL,CACXO,WADW,CACC,CAAC,OAAKN,MAAN,CADD,EACgB,WADhB,EAEXO,WAFW,CAEC,OAAKP,MAFN,EAGX8B,KAHW,EAAd;;AAKAzB,gBAAQI,SAAR,GAAoB;AAAA,iBAAKN,QAAQ,kCAAR,CAAL;AAAA,SAApB;AACAE,gBAAQK,OAAR,GAAkB,aAAK;AACrBC,kBAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,iBAAO,yCAAP;AACD,SAHD;AAID,OAXM,CAAP;AAYD","file":"NegociacaoDao.js","sourcesContent":["class NegociacaoDao {\n\n  constructor(connection) {\n\n    this._connection = connection;\n    this._store = 'negociacoes';\n  }\n\n  adiciona(negociacao) {\n\n    return new Promise((resolve, reject) => {\n\n      let request = this\n        ._connection\n        .transaction([this._store], \"readwrite\")\n        .objectStore(this._store)\n        .add(negociacao);\n\n      request.onsuccess = e => {\n        resolve();\n      };\n\n      request.onerror = e => {\n\n        console.log(e.target.error);\n        reject('Não foi possível adicionar a negociação');\n      };\n\n    });\n  }\n\n  listaTodos() {\n\n    return new Promise((resolve, reject) => {\n\n      let cursor = this._connection\n        .transaction([this._store], 'readwrite')\n        .objectStore(this._store)\n        .openCursor()\n\n      let negociacoes = []\n\n      cursor.onsuccess = e => {\n        let atual = e.target.result\n\n        if (atual) {\n          let dado = atual.value\n\n          negociacoes.push(new Negociacao(dado._data, dado._quantidade, dado._valor))\n\n          atual.continue()\n        } else {\n          resolve(negociacoes)\n        }\n      }\n\n      cursor.onerror = e => {\n        consoele.log(e.target.error)\n        reject('Nao foi possivel listas as negociacoes ')\n      }\n    })\n  }\n\n  apagaTodos() {\n    return new Promise((resolve, reject) => {\n      let request = this._connection\n        .transaction([this._store], 'readwrite')\n        .objectStore(this._store)\n        .clear()\n\n      request.onsuccess = e => resolve('Negocicaes removidas com sucesso')\n      request.onerror = e => {\n        console.log(e.target.error)\n        reject('Nao foi possivel remover as negociacoes')\n      }\n    })\n  }\n\n}"]}